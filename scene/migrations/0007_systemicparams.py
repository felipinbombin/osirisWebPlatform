# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-05 16:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('scene', '0006_auto_20170627_1039'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemicParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mass', models.FloatField()),
                ('inercialMass', models.FloatField()),
                ('maxAccelerationAllowed', models.FloatField()),
                ('maxStartingForceAllowed', models.FloatField()),
                ('maxBrakingForceAllowed', models.FloatField()),
                ('speedOfMotorRegimeChange', models.FloatField()),
                ('maxPower', models.FloatField()),
                ('maxSpeedAllowed', models.FloatField()),
                ('davisParameterA', models.FloatField()),
                ('davisParameterB', models.FloatField()),
                ('davisParameterC', models.FloatField()),
                ('davisParameterD', models.FloatField()),
                ('davisParameterE', models.FloatField()),
                ('tractionSystemEfficiency', models.FloatField()),
                ('brakingSystemEfficiency', models.FloatField()),
                ('electricalBrakeTreshold', models.FloatField()),
                ('electroMechanicalBrakeThreshold', models.FloatField()),
                ('length', models.FloatField()),
                ('numberOfCars', models.FloatField()),
                ('carWidth', models.FloatField()),
                ('carHeight', models.FloatField()),
                ('vehicleWallThickness', models.FloatField()),
                ('heatConductivityOfTheVehicleWall', models.FloatField()),
                ('cabinVolumeFactor', models.FloatField()),
                ('trainPassengerCapacity', models.FloatField()),
                ('point1Tin', models.FloatField()),
                ('point2Tin', models.FloatField()),
                ('point3Tin', models.FloatField()),
                ('point4Tin', models.FloatField()),
                ('point5Tin', models.FloatField()),
                ('point1Tout', models.FloatField()),
                ('point2Tout', models.FloatField()),
                ('point3Tout', models.FloatField()),
                ('point4Tout', models.FloatField()),
                ('point5Tout', models.FloatField()),
                ('hrsExtraPower', models.FloatField()),
                ('onBoardEnergyStorageSystem', models.FloatField()),
                ('storageCapacityWeighting', models.FloatField()),
                ('obessChargeEfficiency', models.FloatField()),
                ('obessDischargeEfficiency', models.FloatField()),
                ('obessUsableEnergyContent', models.FloatField()),
                ('maxDischargePower', models.FloatField()),
                ('maxEnergySavingPossiblePerHour', models.FloatField()),
                ('powerLimitToFeed', models.FloatField()),
                ('hvacConsumption', models.FloatField()),
                ('auxiliariesConsumption', models.FloatField()),
                ('trainsTerminalResistance', models.FloatField()),
                ('voltageDCTrainsTerminals', models.FloatField()),
                ('scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scene.Scene')),
            ],
        ),
    ]
